{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/to-do1/client/src/TaskBoard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TaskBoard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskBoard() {\n  _s();\n  const [taskLists, setTaskLists] = useState(['Task 1', 'Task 2', 'Task 3'\n  // Add more task items here\n  ]);\n\n  const handleDragStart = (e, index) => {\n    e.dataTransfer.setData('text/plain', '');\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('index', index);\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const handleDrop = (e, dropIndex) => {\n    e.preventDefault();\n    const dragIndex = e.dataTransfer.getData('index');\n    const updatedTaskLists = [...taskLists];\n    const [draggedTask] = updatedTaskLists.splice(dragIndex, 1);\n    updatedTaskLists.splice(dropIndex, 0, draggedTask);\n    setTaskLists(updatedTaskLists);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: taskLists.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      draggable: true,\n      onDragStart: e => handleDragStart(e, index),\n      onDragOver: handleDragOver,\n      onDrop: e => handleDrop(e, index),\n      children: task\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskBoard, \"MZHnKrPQMUGgzVVcbiItOyGbD3k=\");\n_c = TaskBoard;\nexport default TaskBoard;\nvar _c;\n$RefreshReg$(_c, \"TaskBoard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskBoard","_s","taskLists","setTaskLists","handleDragStart","e","index","dataTransfer","setData","effectAllowed","handleDragOver","preventDefault","handleDrop","dropIndex","dragIndex","getData","updatedTaskLists","draggedTask","splice","className","children","map","task","draggable","onDragStart","onDragOver","onDrop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dev/Desktop/to-do1/client/src/TaskBoard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskBoard.css';\n\nfunction TaskBoard() {\n  const [taskLists, setTaskLists] = useState([\n    'Task 1',\n    'Task 2',\n    'Task 3',\n    // Add more task items here\n  ]);\n\n  const handleDragStart = (e, index) => {\n    e.dataTransfer.setData('text/plain', '');\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('index', index);\n  };\n\n  const handleDragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDrop = (e, dropIndex) => {\n    e.preventDefault();\n    const dragIndex = e.dataTransfer.getData('index');\n    const updatedTaskLists = [...taskLists];\n    const [draggedTask] = updatedTaskLists.splice(dragIndex, 1);\n    updatedTaskLists.splice(dropIndex, 0, draggedTask);\n    setTaskLists(updatedTaskLists);\n  };\n\n  return (\n    <div className=\"board\">\n      {taskLists.map((task, index) => (\n        <div\n          key={index}\n          className=\"task-list\"\n          draggable\n          onDragStart={(e) => handleDragStart(e, index)}\n          onDragOver={handleDragOver}\n          onDrop={(e) => handleDrop(e, index)}\n        >\n          {task}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TaskBoard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,CACzC,QAAQ,EACR,QAAQ,EACR;EACA;EAAA,CACD,CAAC;;EAEF,MAAMO,eAAe,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IACpCD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;IACxCH,CAAC,CAACE,YAAY,CAACE,aAAa,GAAG,MAAM;IACrCJ,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACxC,CAAC;EAED,MAAMI,cAAc,GAAIL,CAAC,IAAK;IAC5BA,CAAC,CAACM,cAAc,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACP,CAAC,EAAEQ,SAAS,KAAK;IACnCR,CAAC,CAACM,cAAc,CAAC,CAAC;IAClB,MAAMG,SAAS,GAAGT,CAAC,CAACE,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,gBAAgB,GAAG,CAAC,GAAGd,SAAS,CAAC;IACvC,MAAM,CAACe,WAAW,CAAC,GAAGD,gBAAgB,CAACE,MAAM,CAACJ,SAAS,EAAE,CAAC,CAAC;IAC3DE,gBAAgB,CAACE,MAAM,CAACL,SAAS,EAAE,CAAC,EAAEI,WAAW,CAAC;IAClDd,YAAY,CAACa,gBAAgB,CAAC;EAChC,CAAC;EAED,oBACEjB,OAAA;IAAKoB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACnBlB,SAAS,CAACmB,GAAG,CAAC,CAACC,IAAI,EAAEhB,KAAK,kBACzBP,OAAA;MAEEoB,SAAS,EAAC,WAAW;MACrBI,SAAS;MACTC,WAAW,EAAGnB,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEC,KAAK,CAAE;MAC9CmB,UAAU,EAAEf,cAAe;MAC3BgB,MAAM,EAAGrB,CAAC,IAAKO,UAAU,CAACP,CAAC,EAAEC,KAAK,CAAE;MAAAc,QAAA,EAEnCE;IAAI,GAPAhB,KAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAC7B,EAAA,CA3CQD,SAAS;AAAA+B,EAAA,GAAT/B,SAAS;AA6ClB,eAAeA,SAAS;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}